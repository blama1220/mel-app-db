<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />  
    <title>MEL BackOffice</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    {{!-- <link rel="stylesheet" type="text/css" href="./style.css" /> --}}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
  </head>
  
  <style>
    .col-4 {
      margin-bottom: 15px;
    }

    #inputContainer {
      margin-top: 10px;
      display: none;
    }
    

  </style>

  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js" integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V" crossorigin="anonymous"></script>
  <body>
  <nav class="navbar navbar-expand-lg bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Mel - Admin</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item dropdown">
            <a id="toggle-btn" class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Look for
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item filtertype" search='users' href="#">Users</a></li>
              <li><a class="dropdown-item filtertype" search='entertainment' href="#">Movies</a></li>
              <li><a class="dropdown-item filtertype" search='entertainment/billboard' href="#">Billboard</a></li>
            </ul>
          </li>

        <form class="d-flex" role="search">
          <input class="form-control me-2" id="searchInput" type="search" placeholder="Search" aria-label="Search">
        </form>
      </div>
    </div>
  </nav>
  <div id="inputContainer" class="container">
    <label for="basic-url">Add to billboard</label>
    <div class="input-group mb-3">
      <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon3">Entertainment ID: </span>
      </div>
      <input id="billboardInput" type="text" class="form-control" id="basic-url" aria-describedby="basic-addon3">
      <a href="" class="btn btn-primary add">Add</a>
    </div>
  </div>
  <div class="container main">

    
    
    {{{body}}}


  </div>
    
  </body>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    let status;

    let getDataAndRender = (endpoint) => {
      axios({
        method: 'get',
        url: endpoint,
      })
        .then(function (response) {
          document.getElementsByClassName("main")[0].innerHTML = ""
          renderData(response, status)
        });
    }

    let getSearchAndRender = (endpoint) => {
      axios({
        method: 'get',
        url: endpoint,
      })
        .then(function (response) {
          document.getElementsByClassName("main")[0].innerHTML = ""
          renderData(response, "entertainment")
        });
    }

    let renderData = (response, status) => {
      let cardNumber = response.data.length;
      let row = document.createElement("div");
      row.classList.add("row");
      row.classList.add("justify-content-start");

      response.data.forEach((data, index) => {
        if(index % 3 === 0 && index != 0){
          row = document.createElement("div");
          row.classList.add("row");
          row.classList.add("justify-content-start");
        }
        let newElement;
        if(status === 'users'){
          newElement =  `
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">${data.name}</h5>
              <p class="card-text">Location: ${data.location}</p>
              <p class="card-text">Work: ${data.work}</p>
              <p class="card-text">Email: ${data.email}</p>
              <a href="#" data=${data._id} class="btn btn-danger delete">Delete</a>
            </div>
          </div>
        `
        } else if(status === 'entertainment') {
          newElement =  `
          <div class="card" style="width: 18rem;">
            <img class="card-img-top" src="${data.img}" alt="Card image cap">
            <div class="card-body">
              <h5 class="card-title">${data.title}</h5>
              <p class="card-text"> ${data.type}</p>
              <p class="card-text">Year: ${data.year}</p>
              <a href="#" data=${data._id} class="btn btn-danger delete">Delete</a>
            </div>
          </div>
        `;  
        } else {
          newElement =  `
          <div class="card" style="width: 18rem;">
            <img class="card-img-top" src="${data.img}" alt="Card image cap">
            <div class="card-body">
              <h5 class="card-title">${data.title}</h5>
              <p class="card-text"> ${data.type}</p>
              <p class="card-text">Year: ${data.year}</p>
              <a href="#" data=${data._id} class="btn btn-danger remove">Remove</a>
            </div>
          </div>
        `;  

        }

        
        const wrapper = document.createElement("div");
        wrapper.classList.add("col-4");
        wrapper.innerHTML = newElement;
        row.appendChild(wrapper);
        document.getElementsByClassName("main")[0].appendChild(row);
      });



      // Buttons exist now, generating config.
      if(status === 'entertainment/billboard'){
        generateRemoveBtn();
        let billboardDiv = document.getElementById("inputContainer");
        billboardDiv.style.display = 'flex';   
        generateAddBtn();
        
      } else {
        let billboardDiv = document.getElementById("inputContainer");
        billboardDiv.style.display = 'none';   
        generateDeleteBtn(status);
      }
      
    }
    const elem = document.getElementsByClassName('filtertype');

    
    for(var i = 0; i < elem.length; i++) {
      let el = elem[i];
      el.onclick = function() {
          console.log(el.innerHTML);
          document.getElementById("toggle-btn").innerHTML = el.innerHTML;
          status = el.getAttribute("search");
    
          getDataAndRender('http://localhost:5001/' + status);

          if(status === "entertainment/billboard") {

          }
          
      }
    }

    let generateDeleteBtn = (status) => {
      const deleteBtns = document.getElementsByClassName('delete');
 
      for(var i = 0; i < deleteBtns.length; i++) {
        let el = deleteBtns[i];
        el.onclick = function() {
        axios({
          method: 'delete',
          url: 'http://localhost:5001/' + status + "/" + el.getAttribute("data"),
        })
          .then(function (response) {
            alert(response.data.msg);
            getDataAndRender('http://localhost:5001/' + status);
          });
        }
      } 
    }

    let generateRemoveBtn = (status) => {
      const removeBtns = document.getElementsByClassName('remove');
      for(var i = 0; i < removeBtns.length; i++) {
        let el = removeBtns[i];
        el.onclick = function() {
          axios({
            method: 'put',
            url: 'http://localhost:5001/entertainment/remove/' + el.getAttribute("data"),
          })
          .then(function (response) {
            alert(response.data.msg);
            getDataAndRender('http://localhost:5001/entertainment/billboard');
          });
      }
      } 
  }

  let generateAddBtn = (status) => {
    const addBtn = document.getElementsByClassName('add');
    for(var i = 0; i < addBtn.length; i++) {
      let el = addBtn[i];
      el.onclick = function(e) {
      e.preventDefault();
      axios({
        method: 'post',
        url: '/entertainment/billboard/' + document.getElementById("billboardInput").value
      })
        .then(function (response) {
          alert(response.data.msg);
          document.getElementById("billboardInput").value = ""
          getDataAndRender('http://localhost:5001/entertainment/billboard');
        });
      }
    } 
  }
    
    let search = document.getElementById('searchInput');

    search.addEventListener('input', function (event) {
      status = "entertainment"
      getSearchAndRender("http://localhost:5001/entertainment/search/?title=" + event.srcElement.value);
    });

    getSearchAndRender("http://localhost:5001/entertainment/");
      
  </script>
</html>